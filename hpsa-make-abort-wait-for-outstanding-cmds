hpsa:  don't return abort request until target is complete

From: Stephen M. Cameron <scameron@beardog.cce.hp.com>

Signed-off-by: Webb Scales <webbnh@hp.com>
---
 drivers/scsi/hpsa.c |    3 +++
 drivers/scsi/hpsa.h |    1 +
 2 files changed, 4 insertions(+)

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index e8b115a..f160a8e 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -2172,6 +2172,7 @@ static void hpsa_cmd_abort_and_free(struct ctlr_info *h, struct CommandList *c,
 			 c->Request.CDB, c->err_info->ScsiStatus);
 	c->scsi_cmd = NULL;
 	cmd_free(h, c);		/* FIX-ME:  change to cmd_tagged_free(h, c) */
+	wake_up_all(&h->abort_sync_wait_queue);
 }
 
 static void process_ioaccel2_completion(struct ctlr_info *h,
@@ -5519,6 +5520,7 @@ static int hpsa_eh_abort_handler(struct scsi_cmnd *sc)
 		return FAILED;
 	}
 	dev_info(&h->pdev->dev, "%s SENT, SUCCESS\n", msg);
+	wait_event(h->abort_sync_wait_queue, atomic_read(&abort->refcount) == 1);
 	cmd_free(h, abort);
 	return SUCCESS;
 }
@@ -7768,6 +7770,7 @@ reinit_after_soft_reset:
 		goto clean5;	/* cmd, irq, pci, lockup, wq/aer/h */
 	init_waitqueue_head(&h->scan_wait_queue);
 	init_waitqueue_head(&h->abort_cmd_wait_queue);
+	init_waitqueue_head(&h->abort_sync_wait_queue);
 	h->scan_finished = 1; /* no scan currently in progress */
 
 	pci_set_drvdata(pdev, h);
diff --git a/drivers/scsi/hpsa.h b/drivers/scsi/hpsa.h
index d3a7b52..db450bd 100644
--- a/drivers/scsi/hpsa.h
+++ b/drivers/scsi/hpsa.h
@@ -266,6 +266,7 @@ struct ctlr_info {
 	struct workqueue_struct *resubmit_wq;
 	atomic_t abort_cmds_available;
 	wait_queue_head_t abort_cmd_wait_queue;
+	wait_queue_head_t abort_sync_wait_queue;
 };
 
 struct offline_device_entry {
