hpsa: make hpsa_change_queue_depth handle reason SCSI_QDEPTH_QFULL

From: Stephen M. Cameron <scameron@beardog.cce.hp.com>

and call the .change_queue_depth function in the host template,
call scsi_track_queue_full if it gets a reason of SCSI_QDEPTH_QFULL
(a TASK SET FULL status), which lets the SCSI midlayer reduce the
queue depth.

Signed-off-by: Robert Elliott <elliott@hp.com>
Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com>
---
 drivers/scsi/hpsa.c |   21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

diff --git a/drivers/scsi/hpsa.c b/drivers/scsi/hpsa.c
index 16cd208..9d71687 100644
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@ -4860,20 +4860,27 @@ static int hpsa_scan_finished(struct Scsi_Host *sh,
 	return finished;
 }
 
+/* scsi host template change_queue_depth function */
 static int hpsa_change_queue_depth(struct scsi_device *sdev,
 	int qdepth, int reason)
 {
 	struct ctlr_info *h = sdev_to_hba(sdev);
 
-	if (reason != SCSI_QDEPTH_DEFAULT)
-		return -ENOTSUPP;
+	if (reason == SCSI_QDEPTH_DEFAULT || reason == SCSI_QDEPTH_RAMP_UP) {
+		if (qdepth < 1)
+			qdepth = 1;
+		else if (qdepth > h->nr_cmds)
+			qdepth = h->nr_cmds - HPSA_CMDS_RESERVED_FOR_ABORTS -
+						HPSA_CMDS_RESERVED_FOR_DRIVER -
+						HPSA_MAX_CONCURRENT_PASSTHRUS;
+
 
-	if (qdepth < 1)
-		qdepth = 1;
+		scsi_adjust_queue_depth(sdev, scsi_get_tag_type(sdev), qdepth);
+	} else if (reason == SCSI_QDEPTH_QFULL)
+		scsi_track_queue_full(sdev, qdepth);
 	else
-		if (qdepth > h->nr_cmds)
-			qdepth = h->nr_cmds;
-	scsi_adjust_queue_depth(sdev, scsi_get_tag_type(sdev), qdepth);
+		return -ENOTSUPP;
+
 	return sdev->queue_depth;
 }
 
